{"ast":null,"code":"// sweetalert2-react-content v5.0.7\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom/client')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom/client'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.sweetalert2ReactContent = factory(global.React, global.ReactDOM));\n})(this, function (React, client) {\n  'use strict';\n\n  const mounts = [{\n    key: 'title',\n    getter: swal => swal.getTitle()\n  }, {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer()\n  }, {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton()\n  }, {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton()\n  }, {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton()\n  }, {\n    key: 'footer',\n    getter: swal => swal.getFooter()\n  }, {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton()\n  }, {\n    key: 'iconHtml',\n    getter: swal => swal.getIconContent()\n  }, {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader()\n  }];\n\n  const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n\n  function withReactContent(ParentSwal) {\n    /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n    and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n    function extractReactParams(params) {\n      const reactParams = {};\n      const otherParams = {};\n      const mountKeys = mounts.map(mount => mount.key);\n      Object.entries(params).forEach(_ref => {\n        let [key, value] = _ref;\n\n        if (mountKeys.includes(key) && /*#__PURE__*/React.isValidElement(value)) {\n          reactParams[key] = value;\n          otherParams[key] = ' ';\n        } else {\n          otherParams[key] = value;\n        }\n      });\n      return [reactParams, otherParams];\n    }\n\n    function render(swal, reactParams) {\n      Object.entries(reactParams).forEach(_ref2 => {\n        let [key, value] = _ref2;\n        const mount = mounts.find(mount => mount.key === key);\n        const domElement = mount.getter(ParentSwal);\n        const root = client.createRoot(domElement);\n        root.render(value);\n\n        swal.__roots.push(root);\n      });\n    }\n\n    function unrender(swal) {\n      swal.__roots.forEach(root => {\n        root.unmount();\n      });\n\n      swal.__roots = [];\n    }\n\n    return class extends ParentSwal {\n      static argsToParams(args) {\n        if ( /*#__PURE__*/React.isValidElement(args[0]) || /*#__PURE__*/React.isValidElement(args[1])) {\n          const params = {};\n          ['title', 'html', 'icon'].forEach((name, index) => {\n            if (args[index] !== undefined) {\n              params[name] = args[index];\n            }\n          });\n          return params;\n        } else {\n          return ParentSwal.argsToParams(args);\n        }\n      }\n\n      _main(params, mixinParams) {\n        this.__roots = [];\n        this.__params = Object.assign({}, mixinParams, params);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        const superWillOpen = otherParams.willOpen || noop;\n        const superDidOpen = otherParams.didOpen || noop;\n        const superDidDestroy = otherParams.didDestroy || noop;\n        return super._main(Object.assign({}, otherParams, {\n          willOpen: popup => {\n            render(this, reactParams);\n            superWillOpen(popup);\n          },\n          didOpen: popup => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup);\n            });\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup);\n            unrender(this);\n          }\n        }));\n      }\n\n      update(params) {\n        Object.assign(this.__params, params);\n        unrender(this);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        super.update(otherParams);\n        render(this, reactParams);\n      }\n\n    };\n  }\n\n  return withReactContent;\n});","map":{"version":3,"mappings":"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","names":["mounts","key","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIconContent","getLoader","noop","withReactContent","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","map","mount","Object","entries","forEach","_ref","value","includes","React","isValidElement","render","_ref2","find","domElement","root","createRoot","__roots","push","unrender","unmount","argsToParams","args","name","index","undefined","_main","mixinParams","__params","assign","superWillOpen","willOpen","superDidOpen","didOpen","superDidDestroy","didDestroy","popup","setTimeout","update"],"sources":["C:\\fullstackNutech\\frontend_nutech\\node_modules\\sweetalert2-react-content\\src\\mounts.js","C:\\fullstackNutech\\frontend_nutech\\node_modules\\sweetalert2-react-content\\src\\index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: (swal) => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: (swal) => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: (swal) => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: (swal) => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: (swal) => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: (swal) => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: (swal) => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: (swal) => swal.getIconContent(),\n  },\n  {\n    key: 'loaderHtml',\n    getter: (swal) => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent(ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams(params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map((mount) => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n\n  function render(swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find((mount) => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      const root = createRoot(domElement)\n      root.render(value)\n      swal.__roots.push(root)\n    })\n  }\n\n  function unrender(swal) {\n    swal.__roots.forEach((root) => {\n      root.unmount()\n    })\n    swal.__roots = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams(args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main(params, mixinParams) {\n      this.__roots = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superWillOpen = otherParams.willOpen || noop\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          willOpen: (popup) => {\n            render(this, reactParams)\n            superWillOpen(popup)\n          },\n          didOpen: (popup) => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup)\n            })\n          },\n          didDestroy: (popup) => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        })\n      )\n    }\n\n    update(params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}